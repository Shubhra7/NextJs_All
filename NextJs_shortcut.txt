1. page.js is passed in Layout.js
2. Layout.js is main part to show

3. no need to do routing like React, just make files like pages/kalu.js then automatic routing will be done.

4. Keep all frontend routes in src/app/
   Keep all API routes in src/pages/api/



5. for project setup follow ==> 2ndsetupapp
***************
new version:
***************
a. for page routing==> app/about/page.js
b. for api routing==> app/api/hello/route.js 



6. for dynamic routing ==> 2ndsetupapp
   a. app/blogpost/[sno]/pages.js   ====> http://localhost:3000/blogpost/raju
	
import React from 'react'
const page = async({params}) => {
    const {sno} = params
  return (
    <div>
      <p>This profile is of: {sno}</p>
      {/* "sno" name is manditory for dynamic routing*/}
    </div>
  )
}

export default page





7. Title change metadata is good 
export const metadata = {
  title: "About Us",
  description: "Learn more about our team and mission.",
};


8.      <Script src="/sj.js" strategy="afterInteractive"></Script>

9. Image tag do=> lazyLoad


10. for css ==>
	a. app/about/About.module.css
	b. import styles from './About.module.css';




11. ðŸ§© What is styled-jsx?
styled-jsx is a CSS-in-JS styling solution built into Next.js by default.
It allows you to write scoped CSS directly inside your component files â€” without any extra setup.

'use client';
export default function About() {
  return (
    <div>
      <h1>Hello About Page</h1>
      <p>This is a styled paragraph.</p>

      <style jsx>{`
        h1 {
          color: teal;
        }
        p {
          font-size: 18px;
          color: #444;
        }
      `}</style>
    </div>
  );
}
ðŸ”’ Why use styled-jsx?

Styles are scoped only to the component

No naming conflicts

No need for .css files or module.css



******Can you use global styles?

Yes! Just add the global attribute:
<style jsx global>{`
  body {
    margin: 0;
    font-family: Arial;
  }
`}</style>


12. 'use client'; ==> when need to do client side rendering 


	